# Under licence GPLv3 http://www.gnu.org/licenses/gpl.txt
# Hostbase By Koala alias Flow


Topo des script:

~~~~~~~~Avant tout: a la base ces script sont conçu pour fonctionner avec 2 interfaces (j'en utilise toujours 2 pour une meilleur souplesse).~~~~~~~~~
~~~~~~~~ Hostapd n'est compatible qu'avec les cartes atheros chipset ath5k ath9k et ath10k, la carte alfa NHA est compatible aussi avec hostapd, voir sur le site wifi-highpower ~~~~~~~
~~~~~~~~ Vous avez 2 scripts a disposition, le premier se situe dans le meme répertoire que ce fichier lisezmoi, le second dans le dossier hostaseV0.9.La version 0.9 est plus pour les utilisateurs débutants n'ayant pas de carte wifi compatible avec hostapd, dans ce cas la utilisez airbase pour une attaque par phishing classique avec les fakes pages qui vont avec ~~~~~~
~~~~~~~~ L'autre version est plus "fun" (carte wifi doit etre compatible avec hostapd) est deauth la box en faisant passer le fake AP en 1er dans les réseaux sans fils, tant qu'un client ne se connecte pas son réseau est plombé, dès que le client se connecte il est redirigé sur une page demandant d'appuyer sur son bouton WPS, au meme moment la deauth se stope et la seconde interface prend le relais pour balancer des requètes WPS/PBC sur le réseau cible, c'est automatique, une fois que le rogue AP est lancé et que ensuite vous lancez la deauth vous n'avez plus rien a faire, si ça a marché faite l'option "8.  See the wifi key grabed during attack" et vous verrez la clé du réseau enregistré ~~~~~~


Les étapes avant de commencer:
Etape 1

--> Pour bien démarrer:   (note: version 2.3 pas d'erreur avec le mode multi ap d'hostapd et kali 2.0)
Dossiers: livebox sfr et bbox a placer dans /etc  --> (NE pas oublier de remplacer l'essid de la box avant de lancer le script)
A chaque crack penser a aller dans /etc et vider le fichier wpa_supplicant.conf si il est rempli


Etape 2

Créer un fichier dns.txt dans /root et y mettre: 10.0.0.1*.*
Créer un fichier vide: wpa_supplicant.conf dans /etc  (si c'est pas déja fait, le script d'installation le fait si on l'a lancé avant)

On s'occupe pas des différentes conf avec les dhcp, le script fera ça tout seul
On s'occupe pas non plus du hostapd.conf

---------------------------------------------------------------------------------------------------------------------------------------------------
Etape 3

Vérifier ou se trouve la racine du serveur apache dans /etc/apache2/sites-available/000-default.conf (voici mes fichiers, je mets tout a la racine vue que je n'ai pas de serveur web réel):
ServerAdmin webmaster@localhost
	DocumentRoot /var/www/

puis /etc/apache2/apache2.conf et vérifier ces lignes:
<Directory /var/www/>
	Options Indexes FollowSymLinks
	AllowOverride None
	Require all granted
</Directory>

Test rapide de apache:
Droit a attribuer sur le serveur web pour le tester et afficher les fake pages puis récup la clé via le fichier cle.txt
# Droits pour unbutu mais le script contient un chmod 777 car ces droits ne suffisent pas sous kali pour l'afficher, fleme de chercher plus loin...

sudo chown -R root:www-data /var/www/*
find /var/www -type d -exec sudo chmod 701 {} \;
find /var/www -type d -exec sudo chmod 755 {} \;
sudo chown -R root:www-data /var/www/cle.txt
sudo chmod 764 /var/www/cle.txt
sudo service apache2 restart


Le script mettra ces droits automatiquement par la suite.
----------------------------------------------------------------------------------------------------------------------------------------------------


Lancer le script tel que:
bash installation.sh   (si vous etes sur une Ubuntu ou tout autre version debian lancez l'autre script installationunbutu.sh)
et
bash hostbase.sh       (ou bash hostbaseV0.9.sh si vous n'avez pas de chipset compatible avec hostapd de manière a utiliser airbase pour une attaque de phishing classique demandant la clé)

--> IMPORTANT: commencer par un scan passif en plein écran pour récupérer les infos intéréssantes (bssid, canal, essid etc...) en meme temps ça permet de stopper wicd ou network-manager selon les cas (kali/unbutu).

--> IMPORTANT: pour hostapd, si on a une carte externe il se peut qu'elle soit renommée en wlan0 au lieu de wlan1 lorsque vous démarrez avec, donc au moment de choisir sa carte, pour monter le fake AP faire attention A LA BONNE adresse MAC.Si vous branchez la carte externe une fois le system démarré et avant de lancer le script, elle sera renommée normalement en wlan1 ou wlp**** quelque chose...


En cas d'utilisation de hostapd simple ou multi AP on attends qu'un client se connecte a l'AP tant qu'un client n'est pas connecté, le script continu
la deauth.Une fois connecté on balance des requetes sur le BSSID de l'AP cible et on a plus qu'attendre que la victime appuie sur son bouton.En cas
de non connexion du client, éxécuter: bash exit.sh pour sortir du script et nettoyer tout les fichiers utilisés.

Pour airbase et l'attaque caffe-latte sur les routeurs en héxa, on le lance directement dans le meme terminal que le script, pourquoi ? car avec un xterm airbase et littéralement bugé, ça n'a aucune incidence pour la suite car on peut quand meme utiliser les options du script ensuite.Une fois le client connecté ça se verra automatiquement dans la fenetre du script, checker airodump pour voir les IVS


--> IMPORTANT: Le mode multi AP de hostapd ne fonctionnera pas avec la version des dépots car CONFIGURE_DYNAMIC_WLAN n'est pas une option compilé par défaut, il faut donc changer le dernier chiffre/lettre de son adresse mac en 00:11:22:33:44:5c ou 00:11:22:33:44:58 marche aussi.Hostapd doit avoir accès a 3 interfaces a partir d'une seul en mode multi AP c'est pour sa qu'il a besoin qu'on le lui le renseigne si il s'agit de la version des dépots.Autrement télécharger la version 2.3 et décommentez tout ce qui WPS et CONFIGURE_DYNAMIC_WLAN quelque chose comme sa de mémoire).




Apache: accorder un nom en mode http seulement:

1- renseigner le fichier hosts.conf dans /etc y mettre ça et laisser le reste tel quel:

127.0.0.1	localhost
192.168.1.92	maboxassistance.fr   # SI ON VEUT METTRE LE SERVEUR EN LIGNE, METTRE SON IP PUBLIQUE et INVERSEMENT POUR RETOURNER EN LOCAL
127.0.1.1       monnomdordinateur    # Ne pas toucher a cette partie                                

# PENSER A VERIFIER LA REDIRECTION de port sur l'adresse ip de la machine apache via l'interface de la box (http: port 80, https: port 443)
Dans /etc/apache2/sites-available mettre ça:   # Meme configuration pour l'https seul *443 et a mettre a la place de *80

<VirtualHost *:80>
        ServerAdmin webmaster@localhost
        DocumentRoot /var/www
        ServerName maboxassistance.fr          # DOIT CORRESPONDRE AU FICHIER /etc/hosts.conf
        <Directory />
                Options FollowSymLinks
                AllowOverride None
        </Directory>
        <Directory /var/www/>
                Options Indexes FollowSymLinks MultiViews
                AllowOverride None
                Order allow,deny
                allow from all
        </Directory>
</VirtualHost>

Puis relancer apache tel que service apache2 restart 

Améliorez le script, et amusez vous
Enjoy



